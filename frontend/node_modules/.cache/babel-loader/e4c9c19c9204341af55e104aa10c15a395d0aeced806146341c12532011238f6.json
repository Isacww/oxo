{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issen\\\\programmingCourses\\\\own\\\\oxo\\\\oxo\\\\frontend\\\\src\\\\components\\\\board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../style.css\";\nimport useGameLogic from \"../hooks/GameLogicHook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  //Set game logic and handle gamestate\n  const {\n    board,\n    currentPlayer,\n    winner,\n    activeSize,\n    handleClick,\n    resetGame\n  } = useGameLogic();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner ? `Winner: ${winner}!` : `Current Player: ${currentPlayer}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), winner && /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 24\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\n        gridTemplateRows: `repeat(${activeSize}, 1fr)`\n      },\n      children: board.slice(0, activeSize * activeSize).map((cell, index) => /*#__PURE__*/_jsxDEV(\"div\", {\n        className: `cell ${cell ? \"active\" : \"\"}`,\n        onClick: () => handleClick(index),\n        children: cell\n      }, index, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 17\n      }, this))\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 10,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"FpLJ1ZiPItfnMwoQJFcDUWo64D4=\", false, function () {\n  return [useGameLogic];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useGameLogic","jsxDEV","_jsxDEV","Board","_s","board","currentPlayer","winner","activeSize","handleClick","resetGame","children","fileName","_jsxFileName","lineNumber","columnNumber","onClick","className","style","display","gridTemplateColumns","gridTemplateRows","slice","map","cell","index","_c","$RefreshReg$"],"sources":["C:/Users/issen/programmingCourses/own/oxo/oxo/frontend/src/components/board.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../style.css\";\r\nimport useGameLogic from \"../hooks/GameLogicHook\";\r\n\r\nconst Board = () => {\r\n    //Set game logic and handle gamestate\r\n    const { board, currentPlayer, winner, activeSize, handleClick, resetGame } = useGameLogic();\r\n\r\n    return (\r\n        <div>\r\n            <h2>{winner ? `Winner: ${winner}!` : `Current Player: ${currentPlayer}`}</h2>\r\n            {winner && <button onClick={resetGame}>Restart</button>}\r\n            <div \r\n            className=\"board\"\r\n            style={{ \r\n                display: \"grid\",\r\n                gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\r\n                gridTemplateRows: `repeat(${activeSize}, 1fr)`,\r\n            }}\r\n            >\r\n            {board.slice(0, activeSize * activeSize).map((cell, index) => (\r\n                <div\r\n                    key={index} \r\n                    className={`cell ${cell ? \"active\" : \"\"}`}\r\n                    onClick={() => handleClick(index)}\r\n                >\r\n                    {cell}\r\n                </div>\r\n            ))}\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,QAAQ,OAAO;AACvC,OAAO,cAAc;AACrB,OAAOC,YAAY,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB;EACA,MAAM;IAAEC,KAAK;IAAEC,aAAa;IAAEC,MAAM;IAAEC,UAAU;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGV,YAAY,CAAC,CAAC;EAE3F,oBACIE,OAAA;IAAAS,QAAA,gBACIT,OAAA;MAAAS,QAAA,EAAKJ,MAAM,GAAG,WAAWA,MAAM,GAAG,GAAG,mBAAmBD,aAAa;IAAE;MAAAM,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,EAC5ER,MAAM,iBAAIL,OAAA;MAAQc,OAAO,EAAEN,SAAU;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC,eACvDb,OAAA;MACAe,SAAS,EAAC,OAAO;MACjBC,KAAK,EAAE;QACHC,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE,UAAUZ,UAAU,QAAQ;QACjDa,gBAAgB,EAAE,UAAUb,UAAU;MAC1C,CAAE;MAAAG,QAAA,EAEDN,KAAK,CAACiB,KAAK,CAAC,CAAC,EAAEd,UAAU,GAAGA,UAAU,CAAC,CAACe,GAAG,CAAC,CAACC,IAAI,EAAEC,KAAK,kBACrDvB,OAAA;QAEIe,SAAS,EAAE,QAAQO,IAAI,GAAG,QAAQ,GAAG,EAAE,EAAG;QAC1CR,OAAO,EAAEA,CAAA,KAAMP,WAAW,CAACgB,KAAK,CAAE;QAAAd,QAAA,EAEjCa;MAAI,GAJAC,KAAK;QAAAb,QAAA,EAAAC,YAAA;QAAAC,UAAA;QAAAC,YAAA;MAAA,OAKT,CACR;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACG,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACL,CAAC;AAEd,CAAC;AAACX,EAAA,CA5BID,KAAK;EAAA,QAEsEH,YAAY;AAAA;AAAA0B,EAAA,GAFvFvB,KAAK;AA8BX,eAAeA,KAAK;AAAC,IAAAuB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}