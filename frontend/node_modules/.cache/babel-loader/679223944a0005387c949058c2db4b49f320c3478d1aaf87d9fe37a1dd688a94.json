{"ast":null,"code":"var _s = $RefreshSig$();\nimport { useState } from \"react\";\nconst useGameLogic = size => {\n  _s();\n  const [board, setBoard] = useState(Array(size * size).fill(null));\n  const [currentPlayer, setCurrentPlayer] = useState(\"X\");\n  const [winner, setWinner] = useState(null);\n  const handleClick = index => {\n    if (board[index] !== null || winner) return;\n    const newBoard = [...board];\n    newBoard[index] = currentPlayer;\n    setBoard(newBoard);\n    if (checkWinner(newBoard, size)) {\n      setWinner(currentPlayer);\n    } else {\n      setCurrentPlayer(currentPlayer === \"X\" ? \"O\" : \"X\");\n    }\n  };\n  const checkWinner = (board, size) => {\n    const grid = Array.from({\n      length: size\n    }, (_, row) => board.slice(row * size, row * size + size));\n    const lines = [...grid, ...grid[0].map((_, col) => grid.map(row => row[col])), grid.map((_, idx) => grid[idx][idx]), grid.map((_, idx) => grid[idx][size - idx - 1])];\n    return lines.some(line => line.every(cell => cell === currentPlayer));\n  };\n  const resetGame = () => {\n    setBoard(Array(size * size).fill(null));\n    setCurrentPlayer(\"X\");\n    setWinner(null);\n  };\n  return {\n    board,\n    currentPlayer,\n    winner,\n    handleClick,\n    resetGame\n  };\n};\n_s(useGameLogic, \"nmbuJCh46UI9jTO8baTl2nYWMUg=\");\nexport default useGameLogic;","map":{"version":3,"names":["useState","useGameLogic","size","_s","board","setBoard","Array","fill","currentPlayer","setCurrentPlayer","winner","setWinner","handleClick","index","newBoard","checkWinner","grid","from","length","_","row","slice","lines","map","col","idx","some","line","every","cell","resetGame"],"sources":["C:/Users/issen/programmingCourses/own/oxo/oxo/frontend/src/hooks/GameLogicHook.js"],"sourcesContent":["import { useState } from \"react\";\r\n\r\nconst useGameLogic = (size) => {\r\n    const [board, setBoard] = useState(Array(size * size).fill(null));\r\n    const [currentPlayer, setCurrentPlayer] = useState(\"X\");\r\n    const [winner, setWinner] = useState(null);\r\n\r\n    const handleClick = (index) => {\r\n        if (board[index] !== null || winner) return;\r\n        const newBoard = [...board];\r\n        newBoard[index] = currentPlayer;\r\n        setBoard(newBoard);\r\n\r\n        if (checkWinner(newBoard, size)) {\r\n            setWinner(currentPlayer);\r\n        } else {\r\n            setCurrentPlayer(currentPlayer === \"X\" ? \"O\" : \"X\");\r\n        }\r\n    };\r\n\r\n    const checkWinner = (board, size) => {\r\n        const grid = Array.from({ length: size }, (_, row) =>\r\n            board.slice(row * size, row * size + size)\r\n        );\r\n        const lines = [\r\n            ...grid,\r\n            ...grid[0].map((_, col) => grid.map(row => row[col])),\r\n            grid.map((_, idx) => grid[idx][idx]),\r\n            grid.map((_, idx) => grid[idx][size - idx - 1])\r\n        ];\r\n        return lines.some(line => line.every(cell => cell === currentPlayer));\r\n    };\r\n\r\n    const resetGame = () => {\r\n        setBoard(Array(size * size).fill(null));\r\n        setCurrentPlayer(\"X\");\r\n        setWinner(null);\r\n    };\r\n\r\n    return { board, currentPlayer, winner, handleClick, resetGame };\r\n};\r\n\r\nexport default useGameLogic;\r\n"],"mappings":";AAAA,SAASA,QAAQ,QAAQ,OAAO;AAEhC,MAAMC,YAAY,GAAIC,IAAI,IAAK;EAAAC,EAAA;EAC3B,MAAM,CAACC,KAAK,EAAEC,QAAQ,CAAC,GAAGL,QAAQ,CAACM,KAAK,CAACJ,IAAI,GAAGA,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;EACjE,MAAM,CAACC,aAAa,EAAEC,gBAAgB,CAAC,GAAGT,QAAQ,CAAC,GAAG,CAAC;EACvD,MAAM,CAACU,MAAM,EAAEC,SAAS,CAAC,GAAGX,QAAQ,CAAC,IAAI,CAAC;EAE1C,MAAMY,WAAW,GAAIC,KAAK,IAAK;IAC3B,IAAIT,KAAK,CAACS,KAAK,CAAC,KAAK,IAAI,IAAIH,MAAM,EAAE;IACrC,MAAMI,QAAQ,GAAG,CAAC,GAAGV,KAAK,CAAC;IAC3BU,QAAQ,CAACD,KAAK,CAAC,GAAGL,aAAa;IAC/BH,QAAQ,CAACS,QAAQ,CAAC;IAElB,IAAIC,WAAW,CAACD,QAAQ,EAAEZ,IAAI,CAAC,EAAE;MAC7BS,SAAS,CAACH,aAAa,CAAC;IAC5B,CAAC,MAAM;MACHC,gBAAgB,CAACD,aAAa,KAAK,GAAG,GAAG,GAAG,GAAG,GAAG,CAAC;IACvD;EACJ,CAAC;EAED,MAAMO,WAAW,GAAGA,CAACX,KAAK,EAAEF,IAAI,KAAK;IACjC,MAAMc,IAAI,GAAGV,KAAK,CAACW,IAAI,CAAC;MAAEC,MAAM,EAAEhB;IAAK,CAAC,EAAE,CAACiB,CAAC,EAAEC,GAAG,KAC7ChB,KAAK,CAACiB,KAAK,CAACD,GAAG,GAAGlB,IAAI,EAAEkB,GAAG,GAAGlB,IAAI,GAAGA,IAAI,CAC7C,CAAC;IACD,MAAMoB,KAAK,GAAG,CACV,GAAGN,IAAI,EACP,GAAGA,IAAI,CAAC,CAAC,CAAC,CAACO,GAAG,CAAC,CAACJ,CAAC,EAAEK,GAAG,KAAKR,IAAI,CAACO,GAAG,CAACH,GAAG,IAAIA,GAAG,CAACI,GAAG,CAAC,CAAC,CAAC,EACrDR,IAAI,CAACO,GAAG,CAAC,CAACJ,CAAC,EAAEM,GAAG,KAAKT,IAAI,CAACS,GAAG,CAAC,CAACA,GAAG,CAAC,CAAC,EACpCT,IAAI,CAACO,GAAG,CAAC,CAACJ,CAAC,EAAEM,GAAG,KAAKT,IAAI,CAACS,GAAG,CAAC,CAACvB,IAAI,GAAGuB,GAAG,GAAG,CAAC,CAAC,CAAC,CAClD;IACD,OAAOH,KAAK,CAACI,IAAI,CAACC,IAAI,IAAIA,IAAI,CAACC,KAAK,CAACC,IAAI,IAAIA,IAAI,KAAKrB,aAAa,CAAC,CAAC;EACzE,CAAC;EAED,MAAMsB,SAAS,GAAGA,CAAA,KAAM;IACpBzB,QAAQ,CAACC,KAAK,CAACJ,IAAI,GAAGA,IAAI,CAAC,CAACK,IAAI,CAAC,IAAI,CAAC,CAAC;IACvCE,gBAAgB,CAAC,GAAG,CAAC;IACrBE,SAAS,CAAC,IAAI,CAAC;EACnB,CAAC;EAED,OAAO;IAAEP,KAAK;IAAEI,aAAa;IAAEE,MAAM;IAAEE,WAAW;IAAEkB;EAAU,CAAC;AACnE,CAAC;AAAC3B,EAAA,CAtCIF,YAAY;AAwClB,eAAeA,YAAY","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}