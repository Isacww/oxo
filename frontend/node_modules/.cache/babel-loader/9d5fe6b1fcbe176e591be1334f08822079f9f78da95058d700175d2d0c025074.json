{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issen\\\\programmingCourses\\\\own\\\\oxo\\\\oxo\\\\frontend\\\\src\\\\components\\\\board.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from \"react\";\nimport \"../style.css\";\nimport useGameLogic from \"../hooks/GameLogicHook\";\nimport { useUser } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    board,\n    fullSize,\n    currentPlayer,\n    winner,\n    activeSize,\n    activeTopLeft,\n    handleClick,\n    resetGame\n  } = useGameLogic();\n  const {\n    user\n  } = useUser();\n\n  // Player state\n  const [playerX, setPlayerX] = useState((user === null || user === void 0 ? void 0 : user.username) || \"Player 1\");\n  const [playerO, setPlayerO] = useState(\"Player 2\");\n\n  // Update player X when user logs in\n  useEffect(() => {\n    if (user !== null && user !== void 0 && user.username) {\n      setPlayerX(user.username);\n    }\n  }, [user]); // Runs when `user` changes\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X: \", playerX]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 26,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"O:\", /*#__PURE__*/_jsxDEV(\"input\", {\n          type: \"text\",\n          value: playerO,\n          onChange: e => setPlayerO(e.target.value),\n          placeholder: \"Enter O's name\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner ? `Winner: ${winner === \"X\" ? playerX : playerO}!` : `Current Turn: ${currentPlayer === \"X\" ? playerX : playerO}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\n        gridTemplateRows: `repeat(${activeSize}, 1fr)`\n      },\n      children: Array.from({\n        length: activeSize * activeSize\n      }).map((_, index) => {\n        const row = Math.floor(index / activeSize) + activeTopLeft.row;\n        const col = index % activeSize + activeTopLeft.col;\n        const fullIndex = row * fullSize + col;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${board[fullIndex] ? \"active\" : \"\"}`,\n            onClick: () => {\n              if (!winner) handleClick(index);\n            },\n            children: board[fullIndex]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 29\n          }, this)\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"reset-btn\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"M8zwjCIzFp6jQR/88KYy9T1VX/s=\", false, function () {\n  return [useGameLogic, useUser];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useEffect","useGameLogic","useUser","jsxDEV","_jsxDEV","Board","_s","board","fullSize","currentPlayer","winner","activeSize","activeTopLeft","handleClick","resetGame","user","playerX","setPlayerX","username","playerO","setPlayerO","className","children","fileName","_jsxFileName","lineNumber","columnNumber","type","value","onChange","e","target","placeholder","style","display","gridTemplateColumns","gridTemplateRows","Array","from","length","map","_","index","row","Math","floor","col","fullIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/issen/programmingCourses/own/oxo/oxo/frontend/src/components/board.js"],"sourcesContent":["import React, { useState, useEffect } from \"react\";\r\nimport \"../style.css\";\r\nimport useGameLogic from \"../hooks/GameLogicHook\";\r\nimport { useUser } from \"../context/UserContext\";\r\n\r\nconst Board = () => {\r\n    const { board, fullSize, currentPlayer, winner, activeSize, activeTopLeft, handleClick, resetGame } = useGameLogic();\r\n    const { user } = useUser();\r\n\r\n    // Player state\r\n    const [playerX, setPlayerX] = useState(user?.username || \"Player 1\");\r\n    const [playerO, setPlayerO] = useState(\"Player 2\");\r\n\r\n    // Update player X when user logs in\r\n    useEffect(() => {\r\n        if (user?.username) {\r\n            setPlayerX(user.username);\r\n        }\r\n    }, [user]); // Runs when `user` changes\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            {/* Left Panel for player names & game status */}\r\n            <div className=\"left-panel\">\r\n                <h3>Players</h3>\r\n                <p>X: {playerX}</p>\r\n                <p>O: \r\n                    <input \r\n                        type=\"text\" \r\n                        value={playerO} \r\n                        onChange={(e) => setPlayerO(e.target.value)} \r\n                        placeholder=\"Enter O's name\"\r\n                    />\r\n                </p>\r\n                <h2>\r\n                    {winner \r\n                        ? `Winner: ${winner === \"X\" ? playerX : playerO}!` \r\n                        : `Current Turn: ${currentPlayer === \"X\" ? playerX : playerO}`\r\n                    }\r\n                </h2>\r\n            </div>\r\n            \r\n            {/* Middle Panel - Game Board */}\r\n            <div className=\"board-container\" style={{ \r\n                display: \"grid\",\r\n                gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\r\n                gridTemplateRows: `repeat(${activeSize}, 1fr)`,\r\n            }}>\r\n\r\n                {Array.from({ length: activeSize * activeSize }).map((_, index) => {\r\n                    const row = Math.floor(index / activeSize) + activeTopLeft.row;\r\n                    const col = (index % activeSize) + activeTopLeft.col;\r\n                    const fullIndex = row * fullSize + col; \r\n\r\n                    return (\r\n                        <div key={index} className=\"cell-container\">\r\n                            <div\r\n                                className={`cell ${board[fullIndex] ? \"active\" : \"\"}`}\r\n                                onClick={() => { if (!winner) handleClick(index); }}\r\n                            >\r\n                                {board[fullIndex]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                \r\n            </div>\r\n\r\n            {/* Right Panel - Game Controls */}\r\n            <div className=\"right-panel\">\r\n                <h3>Game Info</h3>\r\n                <button onClick={resetGame} className=\"reset-btn\">Restart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}