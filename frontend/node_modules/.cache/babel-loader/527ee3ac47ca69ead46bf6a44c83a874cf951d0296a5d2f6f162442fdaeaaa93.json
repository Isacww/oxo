{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issen\\\\programmingCourses\\\\own\\\\oxo\\\\oxo\\\\frontend\\\\src\\\\components\\\\board.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../style.css\";\nimport useGameLogic from \"../hooks/GameLogicHook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    board,\n    currentPlayer,\n    winner,\n    activeSize,\n    activeTopLeft,\n    handleClick,\n    resetGame\n  } = useGameLogic();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"h2\", {\n      children: winner ? `Winner: ${winner}!` : `Current Player: ${currentPlayer}`\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 10,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\n        gridTemplateRows: `repeat(${activeSize}, 1fr)`\n      },\n      children: Array.from({\n        length: activeSize * activeSize\n      }).map((_, index) => {\n        // Convert active board index to full board index\n        const row = Math.floor(index / activeSize) + activeTopLeft.row;\n        const col = index % activeSize + activeTopLeft.col;\n        const fullIndex = row * 40 + col; // FULL_SIZE = 40\n\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: `cell ${board[fullIndex] ? \"active\" : \"\"}`,\n          onClick: () => !winner && handleClick(fullIndex) // Use fullIndex for click\n          ,\n          children: board[fullIndex]\n        }, index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 12,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      onClick: resetGame,\n      className: \"reset-btn\",\n      children: \"Restart\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"zg5GX7zDEQO/gdtzvOFS+JfzttQ=\", false, function () {\n  return [useGameLogic];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useGameLogic","jsxDEV","_jsxDEV","Board","_s","board","currentPlayer","winner","activeSize","activeTopLeft","handleClick","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gridTemplateRows","Array","from","length","map","_","index","row","Math","floor","col","fullIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/issen/programmingCourses/own/oxo/oxo/frontend/src/components/board.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../style.css\";\r\nimport useGameLogic from \"../hooks/GameLogicHook\";\r\n\r\nconst Board = () => {\r\n    const { board, currentPlayer, winner, activeSize, activeTopLeft, handleClick, resetGame } = useGameLogic();\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            <h2>{winner ? `Winner: ${winner}!` : `Current Player: ${currentPlayer}`}</h2>\r\n\r\n            <div \r\n                className=\"board\"\r\n                style={{ \r\n                    display: \"grid\",\r\n                    gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\r\n                    gridTemplateRows: `repeat(${activeSize}, 1fr)`,\r\n                }}\r\n            >\r\n                {Array.from({ length: activeSize * activeSize }).map((_, index) => {\r\n                    // Convert active board index to full board index\r\n                    const row = Math.floor(index / activeSize) + activeTopLeft.row;\r\n                    const col = (index % activeSize) + activeTopLeft.col;\r\n                    const fullIndex = row * 40 + col; // FULL_SIZE = 40\r\n\r\n                    return (\r\n                        <div\r\n                            key={index} \r\n                            className={`cell ${board[fullIndex] ? \"active\" : \"\"}`}\r\n                            onClick={() => !winner && handleClick(fullIndex)} // Use fullIndex for click\r\n                        >\r\n                            {board[fullIndex]}\r\n                        </div>\r\n                    );\r\n                })}\r\n            </div>\r\n\r\n            <button onClick={resetGame} className=\"reset-btn\">Restart</button>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,MAAM,OAAO;AACzB,OAAO,cAAc;AACrB,OAAOC,YAAY,MAAM,wBAAwB;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAElD,MAAMC,KAAK,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAChB,MAAM;IAAEC,KAAK;IAAEC,aAAa;IAAEC,MAAM;IAAEC,UAAU;IAAEC,aAAa;IAAEC,WAAW;IAAEC;EAAU,CAAC,GAAGX,YAAY,CAAC,CAAC;EAE1G,oBACIE,OAAA;IAAKU,SAAS,EAAC,gBAAgB;IAAAC,QAAA,gBAC3BX,OAAA;MAAAW,QAAA,EAAKN,MAAM,GAAG,WAAWA,MAAM,GAAG,GAAG,mBAAmBD,aAAa;IAAE;MAAAQ,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAK,CAAC,eAE7Ef,OAAA;MACIU,SAAS,EAAC,OAAO;MACjBM,KAAK,EAAE;QACHC,OAAO,EAAE,MAAM;QACfC,mBAAmB,EAAE,UAAUZ,UAAU,QAAQ;QACjDa,gBAAgB,EAAE,UAAUb,UAAU;MAC1C,CAAE;MAAAK,QAAA,EAEDS,KAAK,CAACC,IAAI,CAAC;QAAEC,MAAM,EAAEhB,UAAU,GAAGA;MAAW,CAAC,CAAC,CAACiB,GAAG,CAAC,CAACC,CAAC,EAAEC,KAAK,KAAK;QAC/D;QACA,MAAMC,GAAG,GAAGC,IAAI,CAACC,KAAK,CAACH,KAAK,GAAGnB,UAAU,CAAC,GAAGC,aAAa,CAACmB,GAAG;QAC9D,MAAMG,GAAG,GAAIJ,KAAK,GAAGnB,UAAU,GAAIC,aAAa,CAACsB,GAAG;QACpD,MAAMC,SAAS,GAAGJ,GAAG,GAAG,EAAE,GAAGG,GAAG,CAAC,CAAC;;QAElC,oBACI7B,OAAA;UAEIU,SAAS,EAAE,QAAQP,KAAK,CAAC2B,SAAS,CAAC,GAAG,QAAQ,GAAG,EAAE,EAAG;UACtDC,OAAO,EAAEA,CAAA,KAAM,CAAC1B,MAAM,IAAIG,WAAW,CAACsB,SAAS,CAAE,CAAC;UAAA;UAAAnB,QAAA,EAEjDR,KAAK,CAAC2B,SAAS;QAAC,GAJZL,KAAK;UAAAb,QAAA,EAAAC,YAAA;UAAAC,UAAA;UAAAC,YAAA;QAAA,OAKT,CAAC;MAEd,CAAC;IAAC;MAAAH,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OACD,CAAC,eAENf,OAAA;MAAQ+B,OAAO,EAAEtB,SAAU;MAACC,SAAS,EAAC,WAAW;MAAAC,QAAA,EAAC;IAAO;MAAAC,QAAA,EAAAC,YAAA;MAAAC,UAAA;MAAAC,YAAA;IAAA,OAAQ,CAAC;EAAA;IAAAH,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACjE,CAAC;AAEd,CAAC;AAACb,EAAA,CApCID,KAAK;EAAA,QACqFH,YAAY;AAAA;AAAAkC,EAAA,GADtG/B,KAAK;AAsCX,eAAeA,KAAK;AAAC,IAAA+B,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}