{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issen\\\\programmingCourses\\\\own\\\\oxo\\\\oxo\\\\frontend\\\\src\\\\components\\\\board.js\",\n  _s = $RefreshSig$();\nimport React from \"react\";\nimport \"../style.css\";\nimport useGameLogic from \"../hooks/GameLogicHook\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = () => {\n  _s();\n  const {\n    board,\n    fullSize,\n    currentPlayer,\n    winner,\n    activeSize,\n    activeTopLeft,\n    handleClick,\n    resetGame\n  } = useGameLogic();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Player Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 12,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner ? `Winner: ${winner}!` : `Current Player: ${currentPlayer}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 13,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-cotainer\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        style: {\n          display: \"grid\",\n          gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\n          gridTemplateRows: `repeat(${activeSize}, 1fr)`\n        },\n        children: Array.from({\n          length: activeSize * activeSize\n        }).map((_, index) => {\n          const row = Math.floor(index / activeSize) + activeTopLeft.row;\n          const col = index % activeSize + activeTopLeft.col;\n          const fullIndex = row * fullSize + col;\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${board[fullIndex] ? \"active\" : \"\"}`,\n            onClick: () => {\n              !winner && handleClick(index);\n            },\n            children: board[fullIndex]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 29\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 17,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"reset-btn\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"u2YtZV68pp1+PUeRbBehJWoeFBM=\", false, function () {\n  return [useGameLogic];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useGameLogic","jsxDEV","_jsxDEV","Board","_s","board","fullSize","currentPlayer","winner","activeSize","activeTopLeft","handleClick","resetGame","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gridTemplateRows","Array","from","length","map","_","index","row","Math","floor","col","fullIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/issen/programmingCourses/own/oxo/oxo/frontend/src/components/board.js"],"sourcesContent":["import React from \"react\";\r\nimport \"../style.css\";\r\nimport useGameLogic from \"../hooks/GameLogicHook\";\r\n\r\nconst Board = () => {\r\n    const { board, fullSize, currentPlayer, winner, activeSize, activeTopLeft, handleClick, resetGame } = useGameLogic();\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            {/* Left Panel for stats, player info, etc. */}\r\n            <div className=\"left-panel\">\r\n                <h3>Player Info</h3>\r\n                <h2>{winner ? `Winner: ${winner}!` : `Current Player: ${currentPlayer}`}</h2>\r\n            </div>\r\n            \r\n            {/* Middle Panel for the Game Board */}\r\n            <div className=\"board-cotainer\">\r\n                <div style={{ \r\n                    display: \"grid\",\r\n                    gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\r\n                    gridTemplateRows: `repeat(${activeSize}, 1fr)`,\r\n                }}>\r\n\r\n                    {Array.from({ length: activeSize * activeSize }).map((_, index) => {\r\n                        const row = Math.floor(index / activeSize) + activeTopLeft.row;\r\n                        const col = (index % activeSize) + activeTopLeft.col;\r\n                        const fullIndex = row * fullSize + col; \r\n\r\n                        return (\r\n                            <div\r\n                                key={index} \r\n                                className={`cell ${board[fullIndex] ? \"active\" : \"\"}`}\r\n                                onClick={() => {!winner && handleClick(index)\r\n                                    ;}}\r\n                            >\r\n                                {board[fullIndex]}\r\n                            </div>\r\n                        );\r\n                    })}\r\n                </div>\r\n            </div>\r\n            {/* Right Panel for additional content */}\r\n            <div className=\"right-panel\">\r\n                <h3>Game Info</h3>\r\n                <button onClick={resetGame} className=\"reset-btn\">Restart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}