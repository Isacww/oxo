{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\issen\\\\programmingCourses\\\\own\\\\oxo\\\\oxo\\\\frontend\\\\src\\\\components\\\\board.js\",\n  _s = $RefreshSig$();\nimport React, { useState } from \"react\";\nimport \"../style.css\";\nimport useGameLogic from \"../hooks/GameLogicHook\";\nimport { useUser } from \"../context/UserContext\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst Board = (player1, player2) => {\n  _s();\n  const {\n    board,\n    fullSize,\n    currentPlayer,\n    winner,\n    activeSize,\n    activeTopLeft,\n    handleClick,\n    resetGame\n  } = useGameLogic(player1, player2);\n  const {\n    user\n  } = useUser();\n  const [playerX, setPlayerX] = useState((user === null || user === void 0 ? void 0 : user.username) || \"Player 1\");\n  const [playerO, setPlayerO] = useState(\"Player 2\");\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"game-container\",\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"left-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Players\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 17,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"X: \", playerX]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 18,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n        children: [\"O: \", playerO]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 19,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"h2\", {\n        children: winner ? `Winner: ${winner === \"X\" ? playerX : playerO}!` : `Current Turn: ${currentPlayer === \"X\" ? playerX : playerO}`\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 20,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 16,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"board-container\",\n      style: {\n        display: \"grid\",\n        gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\n        gridTemplateRows: `repeat(${activeSize}, 1fr)`\n      },\n      children: Array.from({\n        length: activeSize * activeSize\n      }).map((_, index) => {\n        const row = Math.floor(index / activeSize) + activeTopLeft.row;\n        const col = index % activeSize + activeTopLeft.col;\n        const fullIndex = row * fullSize + col;\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          className: \"cell-container\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: `cell ${board[fullIndex] ? \"active\" : \"\"}`,\n            onClick: () => {\n              !winner && handleClick(fullIndex);\n            },\n            children: board[fullIndex]\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 25\n        }, this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"right-panel\",\n      children: [/*#__PURE__*/_jsxDEV(\"h3\", {\n        children: \"Game Info\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n        onClick: resetGame,\n        className: \"reset-btn\",\n        children: \"Restart\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 14,\n    columnNumber: 9\n  }, this);\n};\n_s(Board, \"adUm/JZcIUVakmqX5Dw8odGvIbA=\", false, function () {\n  return [useGameLogic, useUser];\n});\n_c = Board;\nexport default Board;\nvar _c;\n$RefreshReg$(_c, \"Board\");","map":{"version":3,"names":["React","useState","useGameLogic","useUser","jsxDEV","_jsxDEV","Board","player1","player2","_s","board","fullSize","currentPlayer","winner","activeSize","activeTopLeft","handleClick","resetGame","user","playerX","setPlayerX","username","playerO","setPlayerO","className","children","fileName","_jsxFileName","lineNumber","columnNumber","style","display","gridTemplateColumns","gridTemplateRows","Array","from","length","map","_","index","row","Math","floor","col","fullIndex","onClick","_c","$RefreshReg$"],"sources":["C:/Users/issen/programmingCourses/own/oxo/oxo/frontend/src/components/board.js"],"sourcesContent":["import React, { useState } from \"react\";\r\nimport \"../style.css\";\r\nimport useGameLogic from \"../hooks/GameLogicHook\";\r\nimport { useUser } from \"../context/UserContext\";\r\n\r\n\r\nconst Board = (player1, player2) => {\r\n    const { board, fullSize, currentPlayer, winner, activeSize, activeTopLeft, handleClick, resetGame } = useGameLogic(player1, player2);\r\n    const { user } = useUser();\r\n    const [playerX, setPlayerX] = useState(user?.username || \"Player 1\");\r\n    const [playerO, setPlayerO] = useState(\"Player 2\");\r\n\r\n    return (\r\n        <div className=\"game-container\">\r\n            {/* Left Panel for stats, player info, etc. */}\r\n            <div className=\"left-panel\">\r\n                <h3>Players</h3>\r\n                <p>X: {playerX}</p>\r\n                <p>O: {playerO}</p>\r\n                <h2>{winner ? `Winner: ${winner === \"X\" ? playerX : playerO}!` : `Current Turn: ${currentPlayer === \"X\" ? playerX : playerO}`}</h2>\r\n            </div>\r\n            \r\n            {/* Middle Panel for the Game Board */}\r\n            <div className=\"board-container\" style={{ \r\n                display: \"grid\",\r\n                gridTemplateColumns: `repeat(${activeSize}, 1fr)`,\r\n                gridTemplateRows: `repeat(${activeSize}, 1fr)`,\r\n            }}>\r\n\r\n                {Array.from({ length: activeSize * activeSize }).map((_, index) => {\r\n                    const row = Math.floor(index / activeSize) + activeTopLeft.row;\r\n                    const col = (index % activeSize) + activeTopLeft.col;\r\n                    const fullIndex = row * fullSize + col; \r\n\r\n                    return (\r\n                        <div className=\"cell-container\">\r\n                            <div\r\n                                key={index} \r\n                                className={`cell ${board[fullIndex] ? \"active\" : \"\"}`}\r\n                                onClick={() => {!winner && handleClick(fullIndex)\r\n                                    ;}}\r\n                            >\r\n                                {board[fullIndex]}\r\n                            </div>\r\n                        </div>\r\n                    );\r\n                })}\r\n                \r\n            </div>\r\n            {/* Right Panel for additional content */}\r\n            <div className=\"right-panel\">\r\n                <h3>Game Info</h3>\r\n                <button onClick={resetGame} className=\"reset-btn\">Restart</button>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Board;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}